plugins {
    id "java"
    id "idea"
    // id "eclipse"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge"
    id "org.spongepowered.mixin"
    id "com.gorylenko.gradle-git-properties" version "2.4.0"
}

version = mod_version
group = mod_group
archivesBaseName = mod_id

sourceCompatibility = '1.8'
// compileJava {
//     sourceCompatibility = '1.8'
// }

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = mappings_version
    String resolved_core_plugin = mod_core_plugin.replace('${mod_group}', mod_group).replace('${mod_id}', mod_id)
    clientJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    serverJvmArgs += "-Dfml.coreMods.load=${resolved_core_plugin}"
    String resolved_core_config = mod_mixin_configs.replace('${mod_id}', mod_id)
    clientRunArgs += "--mixin ${resolved_core_config}"
    serverRunArgs += "--mixin ${resolved_core_config}"
}

repositories {
    mavenCentral()
    maven { url = "https://repo.spongepowered.org/maven" }
    maven { url = "https://jitpack.io/" }
}

configurations {
    configurations.runtimeOnly.setCanBeResolved(true)
    include
    compile.extendsFrom(include)
}

dependencies {
    include('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.18'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': project.minecraft.version, 'mod_description': mod_description,
                'mod_author': mod_author
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, mod_mixin_refmap.replace('${mod_id}', mod_id)
}

jar {
    from(configurations.include.collect {
        it.isDirectory() ? it : zipTree(it)
    }) {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "FMLCorePlugin": mod_core_plugin.replace('${mod_group}', mod_group)
        // attributes "FMLCorePluginContainsFMLMod": "true"
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "MixinConfigs": mod_mixin_configs.replace('${mod_id}', mod_id)
    }
}
