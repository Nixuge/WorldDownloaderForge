	// ChatGPT try (unsuccessful for now)

	public void draw() {
		// For some reason need this, even w the color in the drawRect

		int xOffset = getXoffset();

		// Gui.drawRect(x - xOffset, y, x - width - xOffset, y - height, 0x33111111);

		// Set up the OpenGL state for rendering the notification
		GlStateManager.pushMatrix();
		GlStateManager.enableBlend();
		GlStateManager.blendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA);
		GlStateManager.translate(x, y, 0);

		Tessellator tessellator = Tessellator.getInstance();
		WorldRenderer renderer = tessellator.getWorldRenderer();

		// main rectangle
		renderer.begin(GL11.GL_QUADS, DefaultVertexFormats.POSITION_TEX);

		GlStateManager.color(1f, 1f, 1f, 1f);

		renderer.pos(x, y + ROUNDED_CORNER_RADIUS, 0.0).tex(0.0, 0.0).endVertex();
		renderer.pos(x, y + height - ROUNDED_CORNER_RADIUS, 0.0).tex(0.0, 1.0).endVertex();
		renderer.pos(x + width, y + height - ROUNDED_CORNER_RADIUS, 0.0).tex(1.0, 1.0).endVertex();
		renderer.pos(x + width, y + ROUNDED_CORNER_RADIUS, 0.0).tex(1.0, 0.0).endVertex();

		tessellator.draw();

		// corners
		renderer.begin(GL11.GL_TRIANGLE_FAN, DefaultVertexFormats.POSITION_TEX);

		renderer.pos(x + ROUNDED_CORNER_RADIUS, y + ROUNDED_CORNER_RADIUS, 0.0).tex(0.5f, 0.5f).endVertex();
	
		for (int i = 0; i <= 90; i += 10) {
			double rad = Math.toRadians(i);
			float thisX = x + ROUNDED_CORNER_RADIUS + ROUNDED_CORNER_RADIUS * (float) Math.cos(rad);
			float thisY = y + ROUNDED_CORNER_RADIUS + ROUNDED_CORNER_RADIUS * (float) Math.sin(rad);
			renderer.pos(thisX, thisY, 0.0).tex(0.0, 0.0).endVertex();
		}
	
		tessellator.draw();


		// Restore the OpenGL state
		GlStateManager.disableBlend();
		GlStateManager.popMatrix();

		fontRenderer.drawString(notification.getText(), x - xOffset - width + 3f, y - height + 3f, 0xffffffff, false);

		
		// Level l = getNotification().getLevel();
		// if (l == Level.ERROR) {
		// 	fontRenderer.drawStringWithShadow(this.getNotification().getLevel().getHeader(), x - xOffset - width + 5, y,
		// 			0xffffffff);
		// }
		// if (l == Level.INFO) {
		// 	fontRenderer.drawStringWithShadow(this.getNotification().getLevel().getHeader(), x - xOffset - width + 5, y,
		// 			0xffffffff);
		// }
		// if (l == Level.WARNING) {
		// 	fontRenderer.drawStringWithShadow(this.getNotification().getLevel().getHeader(), x - xOffset - width + 5, y,
		// 			0xffffffff);
		// }

		// fontRenderer.drawString(notification.getText(), x - xOffset - width, y - height + 3f, 0xffffffff, false);
	}